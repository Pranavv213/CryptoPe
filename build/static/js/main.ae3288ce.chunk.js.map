{"version":3,"sources":["pages/Player.js","pages/Cryp.png","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Player","useMoralis","Moralis","isAuthenticated","saveEdits","a","User","Object","extend","query","Query","first","myDetails","set","file","arr","attributes","image","console","log","save","alert","webref","useRef","useState","setImage","setFileUrl","setFile","className","class","src","alt","ref","onClick","current","getScreenshot","Home","useMoralisWeb3Api","contractProcessor","useWeb3ExecuteFunction","account","options","contractAddress","functionName","abi","params","data","msgValue","Units","ETH","amount","fetch","onSuccess","onError","error","message","address","setAddress","setData","visible","setVisible","setAmount","CryptoPe","onResult","result","text","info","style","width","label","onChange","event","target","value","theme","color","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","appId","serverUrl","document","getElementById"],"mappings":"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","file":"static/js/main.ae3288ce.chunk.js","sourcesContent":["import React,{useState,useEffect,useRef} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Player.css\";\r\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\r\nimport Webcam from 'react-webcam';\r\nimport { ConnectButton, Icon } from \"web3uikit\";\r\nconst Player = () => {\r\n  const { isAuthenticated, Moralis } = useMoralis();\r\n \r\n  const saveEdits = async () => {\r\n    const User = Moralis.Object.extend(\"_User\");\r\n    const query = new Moralis.Query(User);\r\n    const myDetails = await query.first();\r\n    myDetails.set(\"qwerty\", \"IamSuperHero\");\r\n    if (file) {\r\n      const User = Moralis.Object.extend(\"_User\");\r\n    const query = new Moralis.Query(User);\r\n    const myDetails = await query.first();\r\n    const arr=myDetails.attributes.image;\r\n    console.log(arr);\r\n  \r\n      \r\n    if(!arr) {\r\n      myDetails.set(\"image\",[`${file}`]);\r\n    }\r\n    else\r\n    {\r\n      myDetails.set(\"image\",[...arr,`${file}`]);\r\n    }\r\n    \r\n    }\r\n    await myDetails.save();\r\n    alert(' Photo saved to Database')\r\n    \r\n  }\r\n  const webref=useRef(null)\r\n  const [image,setImage]=useState()\r\n  const [fileUrl,setFileUrl]=useState()\r\n  const [file,setFile]=useState()\r\n\r\nreturn(\r\n  <>\r\n  <div className=\"container\">\r\n    <div class=\"camera\">\r\n   {file &&  <img src={file} alt=\"no image\"/>}\r\n   {!file &&  <Webcam ref={webref}/>}\r\n   </div>\r\n  \r\n  <br></br>\r\n  <div class=\"menu\">\r\n    <button class=\"button-17\">\r\n  <img class=\"cameradiv\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTEqnqIi9V1vl2kI9salcMEHMx7nx08Ihtmcw&usqp=CAU\" onClick={()=>{\r\n    if(!file)\r\n    {\r\n      console.log(webref.current.getScreenshot());\r\n      setImage(webref.current.getScreenshot())\r\n      setFile(webref.current.getScreenshot())\r\n      setFileUrl(webref.current.getScreenshot())\r\n    }\r\n    else\r\n    {\r\n      setFile()\r\n    }\r\n    \r\n  }}></img>\r\n  </button>\r\n   <button class=\"button-17\" onClick={saveEdits}>save</button>\r\n   </div>\r\n     <br></br>\r\n  </div>\r\n  </>\r\n)\r\n}\r\n\r\nexport default Player;\r\n","export default __webpack_public_path__ + \"static/media/Cryp.16f42ff8.png\";","import React,{useState,useEffect} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\nimport { useMoralis, useMoralisWeb3Api,account,isAuthenticated,useWeb3ExecuteFunction} from \"react-moralis\";\r\nimport { ConnectButton,Input,Button} from \"web3uikit\";\r\nimport Player from './Player'\r\nimport Webcam from'react-webcam'\r\nimport { QrReader } from 'react-qr-reader';\r\nimport CryptoPe from './Cryp.png'\r\n\r\n\r\nconst Home = () => {\r\n  const Web3Api = useMoralisWeb3Api();\r\n  const contractProcessor = useWeb3ExecuteFunction();\r\n  const resolveLink = (url) => {\r\n    if (!url || !url.includes(\"ipfs://\")) return url;\r\n    return url.replace(\"ipfs://\", \"https://gateway.ipfs.io/ipfs/\");\r\n  };\r\n  const { isAuthenticated, Moralis,account } = useMoralis();\r\n\r\n    const fetchNFTs = async () => {\r\n      const options = {\r\n        chain: \"mumbai\",\r\n        address:\"0xdF5Ce0Eb85390170C08c277B5c07c7F0ea435898\"\r\n      }\r\n\r\n      const mumbaiNFTs = await Web3Api.account.getNFTs(options);\r\n      console.log(mumbaiNFTs.result[0])\r\n      console.log(account)\r\n     \r\n      // setPfps(images);\r\n    }\r\n    async function maticTweet() {\r\n\r\n     \r\n      let options = {\r\n        contractAddress: \"0x1CcC44B7EEE16fe3AFca256514b5be424e7f280b\",\r\n        functionName: \"Pay\",\r\n        abi: [{\r\n          \"inputs\": [\r\n            {\r\n              \"internalType\": \"address\",\r\n              \"name\": \"a\",\r\n              \"type\": \"address\"\r\n            }\r\n          ],\r\n          \"name\": \"Pay\",\r\n          \"outputs\": [],\r\n          \"stateMutability\": \"payable\",\r\n          \"type\": \"function\"\r\n        }],params: {\r\n         a:data\r\n        },\r\n        msgValue: Moralis.Units.ETH(amount),\r\n      }\r\n    \r\n        await contractProcessor.fetch({\r\n          params: options,\r\n          onSuccess: () => {\r\n            console.log(\"saved on blockchain\")\r\n          },\r\n          onError: (error) => {\r\n            console.log(error.data.message)\r\n          }\r\n        });\r\n    \r\n      }\r\n  const [address,setAddress]=useState('')\r\n  const [data, setData] = useState('No result');\r\n  const [visible, setVisible] = useState(false);\r\n  const [amount, setAmount] = useState();\r\n\r\n      const handler=(event)=>{\r\n        setAddress(event.target.value)\r\n      }\r\n      const amountset=(event)=>{\r\n        setAmount(event.target.value)\r\n      }\r\n \r\n \r\nreturn(\r\n  <>\r\n  \r\n  \r\n    \r\n      { \r\n      <div class=\"connectbutton\">\r\n  <ConnectButton/>\r\n  <br></br>\r\n  \r\n  </div>\r\n      }\r\n  \r\n      {!isAuthenticated && <img class=\"logo\" src={CryptoPe}/>}\r\n      \r\n \r\n     \r\n     {/* Wallet Address<input value={address} onChange={handler}/> */}\r\n     \r\n {/* <img src={nft}/> */}\r\n \r\n\r\n  <br></br>\r\n  \r\n  {!visible && isAuthenticated &&\r\n  <div class=\"qr\">\r\n  <QrReader\r\n        onResult={(result, error) => {\r\n          if (!!result) {\r\n            setData(result?.text);\r\n            setAddress(result?.text)\r\n            setVisible(true)\r\n          }\r\n\r\n          if (!!error) {\r\n            console.info(error);\r\n          }\r\n        }}\r\n        style={{ width: '100%' }}\r\n      />\r\n      \r\n      <img class=\"logo1\" src={CryptoPe}/>\r\n      </div>\r\n}     \r\n      {visible && isAuthenticated &&\r\n      <div class=\"modal\">\r\n        <div style={{'color':'white'}}>\r\n          To\r\n          &nbsp;\r\n      {address}\r\n      </div>\r\n      <br></br>\r\n      \r\n     \r\n<Input\r\n  label=\"Enter Amount\"\r\n  \r\n  onChange={amountset}\r\n/>\r\n<br></br>\r\n     <div class=\"modal-content\">\r\n     {address && <Button\r\n      onClick={maticTweet}\r\n      text=\"Send\"\r\n      theme=\"primary\"\r\n/> }\r\n<br></br>\r\n     <Button\r\n     color=\"red\"\r\n      onClick={()=>{\r\n        setVisible(false)\r\n      }}\r\n      text=\"Cancel\"\r\n      theme=\"colored\"\r\n/>\r\n      \r\n      \r\n     \r\n      </div>\r\n      <br></br>\r\n      <img class=\"logo2\" src={CryptoPe}/>\r\n      </div>\r\n     \r\n}\r\n    \r\n  </>\r\n)\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport Player from './pages/Player';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  return(\r\n    <Routes>\r\n      <Route path=\"/\" element={<Home />} />\r\n      <Route path=\"/player\" element={<Player />} />\r\n    </Routes>\r\n  )\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { MoralisProvider } from \"react-moralis\";\r\nimport { NotificationProvider } from 'web3uikit';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MoralisProvider appId=\"Hhs8wYUasGdYMXyF1UQi8GgjKYMSOeflsQ0rFlKi\" serverUrl=\"https://jt6yv7snxr06.usemoralis.com:2053/server\">\r\n      <NotificationProvider>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n      </NotificationProvider>\r\n    </MoralisProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}